name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - run: npm ci
    - name: Run tests and generate coverage
      run: npm run test:cov
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          osvalois/aether-backend:${{ github.sha }}
          osvalois/aether-backend:latest

  sonarqube:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Download code coverage results
      uses: actions/download-artifact@v3
      with:
        name: coverage
        path: coverage
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  deploy:
    needs: [build-and-push, sonarqube]
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to production
      run: |
        # Add your deployment steps here
        echo "Deploying to production..."